[{"/Users/yoki/Desktop/Simple projects/car_finder/src/index.js":"1","/Users/yoki/Desktop/Simple projects/car_finder/src/reportWebVitals.js":"2","/Users/yoki/Desktop/Simple projects/car_finder/src/App.js":"3","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CarList.js":"4","/Users/yoki/Desktop/Simple projects/car_finder/src/Utils/useFetch.js":"5","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/carListSyle.js":"6","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/navMenu.js":"7","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/navMenuStyle.js":"8","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/About.js":"9","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/aboutStyle.js":"10","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/NavMenu.js":"11","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/Footer.js":"12","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/footerStyle.js":"13","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CarDetails.js":"14","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CarForm.js":"15","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CreateCar.js":"16","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/carDetailsStyle.js":"17","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/Login.js":"18","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/loginStyle.js":"19","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/Profile.js":"20","/Users/yoki/Desktop/Simple projects/car_finder/src/Utils/userContext.js":"21","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/UserForm.js":"22"},{"size":500,"mtime":1610201746157,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1610201746158,"results":"25","hashOfConfig":"24"},{"size":1267,"mtime":1611342673290,"results":"26","hashOfConfig":"24"},{"size":2485,"mtime":1610765261918,"results":"27","hashOfConfig":"24"},{"size":3000,"mtime":1611324905570,"results":"28","hashOfConfig":"24"},{"size":744,"mtime":1610575158361,"results":"29","hashOfConfig":"24"},{"size":1880,"mtime":1610574274616,"results":"30","hashOfConfig":"24"},{"size":858,"mtime":1610667460872,"results":"31","hashOfConfig":"24"},{"size":1878,"mtime":1610403047564,"results":"32","hashOfConfig":"24"},{"size":277,"mtime":1610374434103,"results":"33","hashOfConfig":"24"},{"size":1941,"mtime":1611410916344,"results":"34","hashOfConfig":"24"},{"size":773,"mtime":1610408447919,"results":"35","hashOfConfig":"24"},{"size":546,"mtime":1610403546519,"results":"36","hashOfConfig":"24"},{"size":7923,"mtime":1611874431628,"results":"37","hashOfConfig":"24"},{"size":2971,"mtime":1611426328189,"results":"38","hashOfConfig":"24"},{"size":3825,"mtime":1611324920597,"results":"39","hashOfConfig":"24"},{"size":223,"mtime":1610766077283,"results":"40","hashOfConfig":"24"},{"size":6069,"mtime":1611867319467,"results":"41","hashOfConfig":"24"},{"size":506,"mtime":1611262734907,"results":"42","hashOfConfig":"24"},{"size":8585,"mtime":1611962231791,"results":"43","hashOfConfig":"24"},{"size":264,"mtime":1611344116123,"results":"44","hashOfConfig":"24"},{"size":7293,"mtime":1611959693528,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"q4ndmx",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yoki/Desktop/Simple projects/car_finder/src/index.js",[],["96","97"],"/Users/yoki/Desktop/Simple projects/car_finder/src/reportWebVitals.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/App.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CarList.js",["98"],"import React from \"react\";\nimport {useState, useLayoutEffect} from \"react\";\nimport useFetch from \"../Utils/useFetch.js\";\nimport {Link} from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {carContiner, carCardStyle} from \"../Style/carListSyle.js\";\n\n\nexport default function CarList(){\n    const [carList, setCarList] = useState();\n    const containerClass = carContiner();\n    const cardClass = carCardStyle();\n    const {get} = useFetch(\"http://localhost:30000/\");\n    useLayoutEffect(()=>{\n        (async() =>{\n            const data = await get('car/all');\n            if(data){\n                console.log(data);\n                setCarList(data.carList);\n            }\n        })();\n    },[]);\n\n\nreturn (\n    <>\n    <Container component=\"div\" maxWidth=\"lg\">\n\n    <ul className={containerClass.root}>\n    {carList && carList.map((car,index) => \n    <Card key={car.ID} className={cardClass.root} variant=\"outlined\">\n            <CardContent>\n                <Typography variant=\"h5\" className={cardClass.h5} paragraph>\n                    Car No.{index + 1}\n                </Typography>\n\n                <Container>\n                <Typography display=\"inline\" variant=\"h6\" className={cardClass.title}>\n                    Brand: \n                </Typography>\n\n                <Typography display=\"inline\" variant=\"h6\" className={cardClass.h6}>\n                    {car.carBrand}\n                </Typography>\n\n                </Container>\n\n\n                <Container>\n                <Typography display=\"inline\"  variant=\"h6\" className={cardClass.title}>\n                    Year of production:\n                </Typography>\n\n                <Typography display=\"inline\" variant=\"h6\" className={cardClass.h6}>\n                    {new Date(car.productYear).getFullYear()}\n                </Typography>\n\n                </Container>\n            </CardContent>\n                <CardActions>\n                    <Link to={`${car.URL}`}>\n                        <Button size=\"small\" color=\"primary\">\n                            View details\n                        </Button>\n                    </Link>\n                </CardActions>\n        </Card>)}\n    </ul>\n    </Container>\n    </>\n);\n}","/Users/yoki/Desktop/Simple projects/car_finder/src/Utils/useFetch.js",["99"],"import { useState } from \"react\";\n\nexport default function useFetch(baseUrl){\n\n    //creating the get request\n    function get(url){\n        return new Promise((resolve,reject) =>{\n            \n            (async () =>{\n                try{\n                    const response = await fetch(baseUrl + url);\n                    const data = await response.json();\n                    if(!data){\n                        return reject(data);\n                    }\n                    resolve(data);\n                }\n                catch(error){\n                    console.log(error);\n                    reject(error);\n                }\n            })();\n        });\n    }\n\n    function post(url,httpBody){\n        const httpHeaders = {\n            \"Content-Type\": \"application/json\",\n        }\n        return new Promise((resolve,reject)=>{\n            (async () =>{\n                try{\n                    const response = await fetch(baseUrl + url,{\n                        method:'POST',\n                        headers: httpHeaders,\n                        body:JSON.stringify(httpBody)\n                    });\n\n                    const data = await response.json();\n                    if((!data) || (data.message)){\n                        return reject(data);\n                    }\n                    resolve(data);\n                }\n                catch(error){\n                    console.log(error);\n                    reject(error);\n                }\n            })();\n        });\n\n    }\n\n    function update(url,httpBody){\n        const httpHeaders = {\n            \"Content-Type\": \"application/json\"\n        }\n        return new Promise((resolve,reject)=>{\n            (async () =>{\n                try{\n                    const response = await fetch(baseUrl + url,{\n                        method:'PUT',\n                        headers: httpHeaders,\n                        body:JSON.stringify(httpBody)\n                    });\n\n                    const data = await response.json();\n                    if((!data) || (data.message)){\n                        return reject(data);\n                    }\n                    resolve(data);\n                }\n                catch(error){\n                    console.log(error);\n                    reject(error);\n                }\n            })();\n        });\n    }\n\n    function errase(url){\n        return new Promise((resolve,reject) =>{\n            (async () =>{\n                try{\n                    const response = await fetch(baseUrl + url,{\n                        method:'DELETE',\n                    });\n                    const data = await response.json();\n                    if(!data){\n                        return reject(data);\n                    }\n                    resolve(data);\n                }\n                catch(error){\n                    console.log(error);\n                    reject(error);\n                }\n            })();\n        });\n    }\n\n    \n\n\n    return {get, update, post,errase}\n}","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/carListSyle.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/navMenu.js",["100"],"/Users/yoki/Desktop/Simple projects/car_finder/src/Style/navMenuStyle.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/About.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Style/aboutStyle.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/NavMenu.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/Footer.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Style/footerStyle.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CarDetails.js",["101"],"import React from \"react\";\nimport {useState, useEffect} from \"react\";\nimport useFetch from \"../Utils/useFetch.js\";\nimport{useRouteMatch,useHistory} from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CreateIcon from '@material-ui/icons/Create';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {carCardStyle} from \"../Style/carListSyle.js\";\nimport{btnContainer} from '../Style/carDetailsStyle.js'\nimport CarForm from './CarForm.js';\nexport default function CarDetails(){\n    const baseURL = 'http://localhost:30000/';\n    const [car, setCar] = useState({\n        carBrand: '',\n        carModel: '',\n        convertible: false,\n        productYear: null\n    });\n    const [canEdit,setCanEdit] = useState(false);\n    const [requestCmpted, setRequestCmpted] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [alertMsg, setAlertMsg] = useState(\"\");\n    const [severity, setSeverity] = useState({})\n    const [redirect, setRedirect] = useState(false);\n    const [deleteDialog, setDeleteDialog] = useState(false);\n    const routeObj = useRouteMatch();\n    const pathObj = useHistory();\n    const requestID = routeObj.params.id;\n    const cardClass = carCardStyle();\n    const contanerClass = btnContainer();\n    const {get,update,errase} = useFetch(baseURL);  \n    useEffect(()=>{\n        (async() =>{\n            const data = await get(`car/${requestID}/detail`);\n            if(data.car){\n                setCar(data.car);\n            }\n            else{\n                console.log(data);\n            }\n            setLoading(false);\n        })();\n    },[]);\n\n    \n    const handleBrandChange = (event) => {\n        setCar({...car, carBrand:event.target.value});\n      };\n\n    const handleModelChange = (event) => {\n        setCar({...car, carModel:event.target.value});\n      };\n\n\n    const handleDateChange = (date) => {\n        setCar({\n            ...car, productYear: date.toISOString(),\n        })\n      };\n\n    const handleIsConvertible = (event) => {\n        setCar({...car, convertible:event.target.checked});\n      };\n\n    const handleEditClick = () =>{\n        setCanEdit(!canEdit);\n    }\n\n    const handleCarUptClick = () =>{\n        let updatedCar = {\n            'carBrand': car.carBrand,\n            'carModel': car.carModel,\n            'productYear': car.productYear,\n            'convertible': car.convertible,\n        };\n\n        (async()=>{\n            const data = await update(`car/${requestID}/update`,updatedCar);\n            if(data.modifiedCar){\n                setCar(data.modifiedCar);\n\n                //dynamically change Alert component message and severity\n                setSeverity({...severity, level:'success'});\n                setAlertMsg('Updated successfully!');\n                setRequestCmpted(true);\n            }\n            else{\n                console.log(data);\n                //dynamically change Alert component message and severity\n                setSeverity({...severity, level:'error'});\n                setAlertMsg('Opss..Something went wrong!');\n                setRequestCmpted(true);\n            }\n        })();  \n    }\n\n\n    const handleCarDltClick = ()=>{\n        (async()=>{\n            const data = await errase(`car/${requestID}/delete`);\n            if(data.message){\n                setSeverity({...severity, level:'success'});\n                setAlertMsg('Deleted successfully!');\n                setRedirect(true);\n                setRequestCmpted(true);\n            }\n            else{\n                console.log(data);\n                setSeverity({...severity, level:'error'});\n                setAlertMsg('Opss..Something went wrong!');\n                setRequestCmpted(true);\n            }\n        })();  \n    }\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setRequestCmpted(false);\n        //Only redirect the page, when user delete a car\n        if(redirect){\n            pathObj.push('/car/all');\n        }\n        \n      };\n\n    return (\n        <>\n        <Box component=\"div\" display='flex' alignItems='center' flexDirection='column'>\n            <Typography variant=\"h4\" className={cardClass.h4}>\n                {car.carFullname}\n                <IconButton onClick={handleEditClick}>\n                    <CreateIcon />\n                </IconButton>\n            </Typography>\n\n            {\n                loading &&\n                <CircularProgress />\n            }\n\n            {\n                !loading &&\n                <CarForm\n                    canEdit = {canEdit}\n                    carBrand={car.carBrand}\n                    carModel={car.carModel}\n                    isConvertible={car.convertible}\n                    productYear={car.productYear}\n                    onBrandChange={handleBrandChange}\n                    onModelChange={handleModelChange}\n                    onDateChange={handleDateChange}\n                    onCovertibleChange={handleIsConvertible}\n                />\n            }\n            \n\n            <Snackbar anchorOrigin={{vertical:'bottom', horizontal: 'left'}} open={requestCmpted} autoHideDuration={1000} onClose={handleClose}>\n                <MuiAlert  severity={severity.level} elevation={10} variant=\"filled\">\n                    {alertMsg}\n                </MuiAlert>\n            </Snackbar>\n\n            <Container maxWidth='sm' className={contanerClass.root}>\n                <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}\n                        disabled={(!canEdit) || (!car.carBrand) || (!car.carModel)}\n                        onClick={() =>setDeleteDialog(true)}\n                        >\n                        Delete\n                </Button>\n\n                <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<SaveIcon />}\n                        disabled={(!canEdit) || (!car.carBrand) || (!car.carModel)}\n                        onClick={handleCarUptClick}\n                        >\n                        Update\n                </Button>\n            </Container>\n\n            <Dialog\n                open={deleteDialog}\n                onClose={()=> setDeleteDialog(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete this Car?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Please confirm that you want to remove this Car from the App?\n                    </DialogContentText>\n                </DialogContent>\n            <DialogActions>\n                <Button onClick={()=> setDeleteDialog(false)} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleCarDltClick} color=\"secondary\" autoFocus>\n                    Confirm\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n           \n        </Box>\n        </>\n    )\n    \n}","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CarForm.js",["102"],"import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {MuiPickersUtilsProvider,KeyboardDatePicker} from '@material-ui/pickers';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nexport default function CarForm(props){\n    const{canEdit,carBrand, carModel, isConvertible, \n        productYear, onBrandChange, onModelChange,onDateChange,onCovertibleChange} = props;\n\n    return(\n        <>\n        <Container maxWidth='sm'>\n            <FormGroup>\n                <FormControlLabel\n                    control={<Switch\n                    checked={isConvertible}\n                    onChange={onCovertibleChange}\n                    name=\"carConvertible\"\n                    color=\"primary\"\n                    disabled={!canEdit}\n                />}\n                    label=\"Convertible\"\n                />\n\n                <Grid  container direction=\"column\" justify='space-around' alignItems=\"center\" alignItems=\"stretch\">\n                <FormControl variant=\"outlined\" margin='normal' error={!carBrand}>\n                    <InputLabel htmlFor=\"input-brand\">Brand*</InputLabel>\n                    <OutlinedInput id=\"input-brand\" disabled={!canEdit} value={carBrand} onChange={onBrandChange} label=\"Brand:\"/>\n                    {(!carBrand) && <FormHelperText id=\"input-brand-error-text\">The field is requiered!</FormHelperText>}\n                </FormControl>\n\n                <FormControl variant=\"outlined\" margin='normal' error={(!carModel)}>\n                    <InputLabel htmlFor=\"input-model\">Model*</InputLabel>\n                    <OutlinedInput id=\"input-model\" disabled={!canEdit} value={carModel} onChange={onModelChange} label=\"Model:\" />\n                    {(!carModel) && <FormHelperText id=\"input-model-error-text\">The field is requiered!</FormHelperText>}\n                </FormControl>\n\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                            margin=\"normal\"\n                            disabled={!canEdit}\n                            id=\"date-picker-dialog\"\n                            label=\"Production date:\"\n                            format=\"dd/MM/yyyy\"\n                            value={productYear}\n                            onChange={onDateChange}\n                            KeyboardButtonProps={{'aria-label': 'change date'}}\n                    />\n                </MuiPickersUtilsProvider>\n                </Grid>\n            </FormGroup>\n        </Container>\n    </>\n    )\n\n}","/Users/yoki/Desktop/Simple projects/car_finder/src/Components/CreateCar.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Style/carDetailsStyle.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/Login.js",["103","104","105","106"],"import React from \"react\";\nimport {useState, createContext} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Box from '@material-ui/core/Box';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport useFetch from \"../Utils/useFetch.js\";\nimport {parentContainer, loginContainer, loginTitle} from \"../Style/loginStyle.js\";\nimport Profile from \"./Profile.js\";\nimport {UserProvider} from \"../Utils/userContext.js\";\nimport {Switch, Route} from \"react-router-dom\";\n\n\nexport default function Login(){\n    const[email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [validation, setValidation] = useState({\n        validEmail : false,\n        validPass: false\n    });\n    const [userProfile, setUserProfile] = useState(null)\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const baseURL = 'http://localhost:30000/';\n    const {post} = useFetch(baseURL);\n    const pathObj = useHistory();\n\n    const parentCtnStyle = parentContainer();\n    const loginCtnStyle = loginContainer();\n    const titleStyle = loginTitle();\n\n    function verifyEmail(email){\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        //console.log(re.test(String(email).toLowerCase()));\n        return re.test(String(email).toLowerCase());\n    }\n\n    function verifyPass(password){\n        //console.log((password.length > 8 ? true : false))\n        return (password.length >= 8 ? true : false);\n    }\n\n    function handleEmailChange(event){\n        setErrorMsg(\"\");\n        setEmail((previousValue) => {\n            //debugger;\n            return previousValue = event.target.value;\n        });\n        //validating email format\n        const result = verifyEmail(event.target.value);\n        //set the result to the validation state\n        setValidation({...validation, validEmail: result });\n    }\n\n    function handlePasswordChange(event){\n        setErrorMsg(\"\");\n        setPassword(()=> {\n            return event.target.value;\n        });\n        //validating password length\n        const result = verifyPass(event.target.value);\n        //seting the result to the validation state\n        setValidation({...validation, validPass: result});\n    }\n\n    async function handleLoginClick(){\n        const userLogin = {\n            email: email,\n            password: password\n        }\n\n        try{\n            const data = await post('users/login', userLogin);\n            if(data){\n                //console.log(data);\n                setUserProfile(data);\n                \n            }\n\n        }catch(error){\n            console.error(error);\n            setErrorMsg(error.message);\n        }\n\n    }\n\n    if(userProfile){\n        \n        //let's save the user profile information into the local storage\n        //as a temp workaround\n        localStorage.setItem('userID', JSON.stringify(userProfile.user.ID));\n        pathObj.push('/user/me');\n        return(\n            <>\n                <Profile userObj={userProfile}/>\n            </>\n        );\n    }\n\n\n\n    return(\n        <>\n        <Container className={parentCtnStyle.root}>\n            <Container maxWidth='sm' className={loginCtnStyle.root}>\n                <Typography variant=\"h5\" className={titleStyle.h5}>\n                        Login to Car finder:\n                </Typography>\n\n                {\n                    errorMsg &&\n                    <Typography color=\"secondary\">{errorMsg}</Typography>\n                }\n\n                <FormGroup>\n                    <FormControl variant=\"outlined\" margin='normal' error={(email) && (!validation.validEmail)}>\n                        <InputLabel  htmlFor=\"email-input\">Email*</InputLabel>\n                        <OutlinedInput \n                                required \n                                id=\"email-input\" \n                                type=\"email\" \n                                label=\"Email\" \n                                placeholder=\"john@example.com\" \n                                onChange={handleEmailChange}\n                        />\n                        {((email) && (!validation.validEmail)) && <FormHelperText id=\"input-email-error-text\">Incorrect Email format!</FormHelperText>}\n                    </FormControl>\n        \n                    <FormControl variant=\"outlined\" margin='normal' error={(password) && (!validation.validPass)}>\n                        <InputLabel htmlFor=\"email-input\">Password*</InputLabel>\n                         <OutlinedInput \n                            required \n                            id=\"email-input\" \n                            type=\"password\" \n                            label=\"Password\" \n                            placeholder=\"your password...\"\n                            onChange={handlePasswordChange}\n                        />\n                        {((password) && (!validation.validPass)) && <FormHelperText id=\"input-password-error-text\">At least 8 characters!</FormHelperText>}\n                    </FormControl>\n                </FormGroup>\n\n                <Container>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <Button color=\"primary\">\n                            Register\n                        </Button>\n\n                        <Button color=\"primary\"  onClick={handleLoginClick} disabled={(!validation.validEmail) || (!validation.validPass)}>\n                            Login\n                        </Button>\n                    </Box>\n                </Container>\n            </Container>\n        </Container>\n        </>\n        )\n}","/Users/yoki/Desktop/Simple projects/car_finder/src/Style/loginStyle.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/Profile.js",["107","108"],"/Users/yoki/Desktop/Simple projects/car_finder/src/Utils/userContext.js",[],"/Users/yoki/Desktop/Simple projects/car_finder/src/Components/UserForm.js",["109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":27,"column":7,"nodeType":"116","endLine":27,"endColumn":9,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"114","severity":1,"message":"123","line":56,"column":7,"nodeType":"116","endLine":56,"endColumn":9,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":34,"column":96,"nodeType":"127","endLine":34,"endColumn":116},{"ruleId":"118","severity":1,"message":"128","line":2,"column":19,"nodeType":"120","messageId":"121","endLine":2,"endColumn":32},{"ruleId":"118","severity":1,"message":"129","line":16,"column":9,"nodeType":"120","messageId":"121","endLine":16,"endColumn":21},{"ruleId":"118","severity":1,"message":"130","line":17,"column":9,"nodeType":"120","messageId":"121","endLine":17,"endColumn":15},{"ruleId":"118","severity":1,"message":"131","line":17,"column":17,"nodeType":"120","messageId":"121","endLine":17,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":57,"column":7,"nodeType":"116","endLine":57,"endColumn":9,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"133","line":63,"column":7,"nodeType":"116","endLine":63,"endColumn":25,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"126","line":38,"column":96,"nodeType":"127","endLine":38,"endColumn":116},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'get' and 'requestID'. Either include them or remove the dependency array.",["138"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createContext' is defined but never used.","'UserProvider' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.",["139"],"React Hook useEffect has missing dependencies: 'canUpdateUser' and 'errorMsg'. Either include them or remove the dependency array. You can also do a functional update 'setErrorMsg(e => ...)' if you only need 'errorMsg' in the 'setErrorMsg' call.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [get]",{"range":"148","text":"149"},"Update the dependencies array to be: [get, requestID]",{"range":"150","text":"151"},{"range":"152","text":"149"},"Update the dependencies array to be: [user, repeatEmail, errorMsg, canUpdateUser]",{"range":"153","text":"154"},[984,986],"[get]",[2329,2331],"[get, requestID]",[2090,2092],[2353,2371],"[user, repeatEmail, errorMsg, canUpdateUser]"]